<?xml version="1.0" encoding="UTF-8"?>
<mapping-configuration>
	<!-- 根据组织机构code和角色code, 查询相关的用户集合 -->
	<sql-query name="QueryRoleUserList">
		<content>
			with user_org_rel as (
				select user_.*, case user_.sex when 1 then '男' when 2 then '女' else 'ERR' end sex_text, org_.name org_name from base_data_rel rel
					left join base_user user_ on (user_.id = rel.left_value)
					left join base_org org_ on (org_.code= rel.right_value and rel.right_type='ORG_CODE' and rel.tenant_id=#{tenantId})
						where rel.left_type='USER_ID' and rel.right_type='ORG_CODE' and rel.project_code is null and 
						<foreach collection="orgCodes" alias="orgCode" open="rel.right_value in (" separator="," close=")">
							#{orgCode}
						</foreach> 
						and rel.tenant_id= #{tenantId}
			)
			select uor.*, case when rel.right_value is null then 2 else 1 end is_checked from user_org_rel uor
				left join base_data_rel rel on (rel.left_type='USER_ID' and rel.left_value= uor.id and rel.right_type='ROLE_CODE' and rel.right_value=#{code} and rel.tenant_id=#{tenantId})
		</content>
		
		<parameters>
			<parameter name="id" dataType="string" />
			<parameter name="type" dataType="number" />
			<parameter name="name" dataType="string" />
			<parameter name="real_name" dataType="string" />	
			<parameter name="sex" dataType="number" />
			<parameter name="sex_text" dataType="number" />
			<parameter name="phone_num" dataType="number" />	
			<parameter name="email" dataType="string" />
			<parameter name="create_user_id" dataType="string" />
			<parameter name="create_date" dataType="datetime" />
		</parameters>
	</sql-query>
</mapping-configuration>